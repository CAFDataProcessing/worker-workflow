#
# Copyright 2017-2020 Micro Focus or one of its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
arguments:
  - name: tenantId
    sources:
      - name: TASK_SETTING_TENANTID
        type: CUSTOM_DATA
  - name: ee.operationmode
    sources:
      - name: TASK_SETTING_EE.OPERATIONMODE
        type: CUSTOM_DATA
  - name: ee.grammarmap
    sources:
      - name: TASK_SETTING_EE.GRAMMARMAP
        type: CUSTOM_DATA
      - name: ee.grammarmap
        type: SETTINGS_SERVICE
        options: repository-%f:REPOSITORY_ID%,tenantId-%cd:TASK_SETTING_TENANTID%
  - name: RECORD_USAGE
    sources:
      - name: TASK_SETTING_RECORD_USAGE
        type: CUSTOM_DATA
      - name: RECORD_USAGE
        type: SETTINGS_SERVICE
        options: tenantId-%cd:TASK_SETTING_TENANTID%
  - name: INDEXING_MODE
    sources:
      - name: TASK_SETTING_INDEXING_MODE
        type: CUSTOM_DATA
actions:
  - name: family_hashing
    customData:
      tenantId: tenantId
    scripts:
      - name: recordProcessingTimes.js
        script: |
          function onProcessTask(e) {
            var startTime = new Date();
            e.rootDocument.getField("LONG_FAMILY_HASHING_START_TIME").set(startTime.getTime());
            e.rootDocument.getField("ENRICHMENT_TIME").set(Math.round(startTime.getTime() / 1000));
          }
          function onAfterProcessTask(e) {
            var endTime = new Date();
            e.rootDocument.getField("LONG_FAMILY_HASHING_END_TIME").set(endTime.getTime());
          }
          function onError(e) {
            var failedTime = new Date();
            e.rootDocument.getField("LONG_FAMILY_HASHING_FAILED_TIME").set(failedTime.getTime());
          }
  - name: lang_detect
    conditionFunction: |
      function condition (document) {
        return fieldExists(document, 'CONTENT_PRIMARY');
      }
    customData:
      fieldSpecs: "'CONTENT_PRIMARY'"
    scripts:
      - name: recordProcessingTimes.js,
        script: |
          function onProcessTask(e) {
            var startTime = new Date();
            e.rootDocument.getField("LONG_LANGUAGE_DETECTION_START_TIME").set(startTime.getTime());
          }
          function onAfterProcessTask(e) {
            var endTime = new Date();
            e.rootDocument.getField("LONG_LANGUAGE_DETECTION_END_TIME").set(endTime.getTime());
          }
          function onError(e) {
            var failedTime = new Date();
            e.rootDocument.getField("LONG_LANGUAGE_DETECTION_FAILED_TIME").set(failedTime.getTime());
          }
  - name: bulk_index
